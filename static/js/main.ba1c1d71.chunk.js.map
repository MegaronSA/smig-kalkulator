{"version":3,"sources":["components/Adhesives.tsx","data/finishes/finishes.ts","components/Finishes/RequiredAmountForm.tsx","data/finishes/api.ts","components/Finishes/RequiredAmountResult.tsx","components/Finishes/ShoppingListForm.tsx","components/Finishes/ShoppingListResult.tsx","components/Finishes/Finishes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Adhesives","props","finishes","Object","freeze","surfaces","packageTypes","RequiredAmountForm","setResult","useState","product","setProduct","area","setArea","surface","setSurface","useEffect","parsedArea","parseFloat","_","isNumber","isNaN","undefined","efficiency","finish","surfaceIdx","indexOf","getFinishEfficiency","className","htmlFor","name","value","onChange","e","target","getProductOptions","type","getSurfaceOptions","keys","map","selectedSurface","checked","RequiredAmountResult","result","toFixed","src","alt","ShoppingListForm","setPackagesToBuy","packagesToBuy","setPriceSum","packageType","setPackageType","pricePerPackage","setPricePerPackage","console","log","ceiled","Math","ceil","parsedPrice","getPackagingOptions","selectedPackageType","parseInt","ShoppingListResult","priceSum","toLocaleString","style","currency","Finishes","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba1c1d71.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ninterface Props {}\r\n\r\nexport const Adhesives: React.FC<Props> = (props) => {\r\n  return <h3>Kleje</h3>\r\n}\r\n","export const finishes = Object.freeze({\r\n  'A-2': [2, 1, 2, 0.4, 1, 0.5],\r\n  'A-6': [2.1, 1.05, 2.1, 0.42, 1.05, 0.525],\r\n  'A-8': [2.1, 1.05, 2.1, 0.42, 1.05, 0.525],\r\n  'A-11': [2.1, 1.05, 2.1, 0.42, 1.05, 0.525],\r\n  'Dv-20': [2, 1, 2, 0.4, 1, 0.5],\r\n  'Dv-21': [2, 1, 2, 0.4, 1, 0.5],\r\n  'Df-16': [2, 1, 2, 0.4, 1, 0.5],\r\n})\r\n\r\nexport type Finish = keyof typeof finishes\r\n\r\nexport const surfaces = Object.freeze([\r\n  'Tynk gipsowy',\r\n  'Tynk gipsowy wygładzony mleczkiem',\r\n  'Tynk cementowy',\r\n  'G-k Q3',\r\n  'G-k Q4',\r\n  'Stara powłoka malarska',\r\n] as const)\r\n\r\nexport type Surface = typeof surfaces[number]\r\n\r\nexport const packageTypes = Object.freeze([5, 10, 20] as const)\r\n\r\nexport type PackageType = typeof packageTypes[number]\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Finish,\r\n  Surface,\r\n  finishes,\r\n  surfaces,\r\n  getFinishEfficiency,\r\n} from 'data/finishes'\r\nimport _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\ninterface Props {\r\n  setResult: (result: number | undefined) => void\r\n}\r\n\r\nconst initialProduct: Finish = 'A-2'\r\n\r\nexport const RequiredAmountForm: React.FC<Props> = ({ setResult }) => {\r\n  const [product, setProduct] = useState<Finish>(initialProduct)\r\n  const [area, setArea] = useState<string>('')\r\n  const [surface, setSurface] = useState<Surface>()\r\n\r\n  useEffect(() => {\r\n    const parsedArea = parseFloat(area)\r\n    if (!product || !_.isNumber(parsedArea) || _.isNaN(parsedArea) || !surface)\r\n      return setResult(undefined)\r\n    const efficiency = getFinishEfficiency(product, surface)\r\n    const result = parsedArea / efficiency\r\n    setResult(result)\r\n  }, [product, area, surface])\r\n\r\n  return (\r\n    <section className=\"my-6 flex flex-col gap-6\">\r\n      <div>\r\n        <label className=\"input-label\" htmlFor=\"product\">\r\n          Produkt:\r\n        </label>\r\n        <select\r\n          name=\"product\"\r\n          className=\"mt-1 block w-full input\"\r\n          value={product}\r\n          onChange={(e) => setProduct(e.target.value as Finish)}\r\n        >\r\n          {getProductOptions()}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label className=\"input-label\">Powierzchnia:</label>\r\n        <input\r\n          className=\"mt-1 block w-full input\"\r\n          type=\"text\"\r\n          value={area}\r\n          onChange={(e) => setArea(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h6 className=\"input-label\">Rodzaj podłoża:</h6>\r\n        <div className=\"flex flex-col gap-1 mt-1\">\r\n          {getSurfaceOptions(surface, setSurface)}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst getProductOptions = () =>\r\n  Object.keys(finishes).map((finish) => <option key={finish}>{finish}</option>)\r\n\r\nconst getSurfaceOptions = (\r\n  selectedSurface: Surface | undefined,\r\n  onChange: (surface: Surface) => void,\r\n) =>\r\n  surfaces.map((surface) => (\r\n    <div className=\"flex flex-row gap-4 items-center\" key={surface}>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"surfaces\"\r\n        value={surface}\r\n        checked={selectedSurface === surface}\r\n        onChange={(e) => onChange(e.target.value as Surface)}\r\n      />\r\n      <label htmlFor={surface}>{surface}</label>\r\n    </div>\r\n  ))\r\n","import { Finish, finishes, Surface, surfaces } from './finishes'\r\n\r\nexport const getFinishEfficiency = (finish: Finish, surface: Surface) => {\r\n  const surfaceIdx = surfaces.indexOf(surface)\r\n  return finishes[finish][surfaceIdx]\r\n}\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n  result: number\r\n}\r\n\r\nexport const RequiredAmountResult: React.FC<Props> = ({ result }) => {\r\n  return (\r\n    <section className=\"w-full flex flex-row\">\r\n      <div className=\"w-1/2\">\r\n        <h5 className=\"text-gray-700 text-lg font-bold\">Potrzebujesz:</h5>\r\n        <h2 className=\"font-roboto-slab font-bold text-gray-900 text-4xl mt-2\">\r\n          {`${result.toFixed(2)}kg`}\r\n        </h2>\r\n      </div>\r\n      <aside className=\"w-1/2 relative -right-4\">\r\n        <img src=\"/smig_presents.png\" alt=\"rezultat_img\" />\r\n      </aside>\r\n    </section>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { PackageType, packageTypes } from 'data/finishes'\r\nimport _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\ninterface Props {\r\n  result: number\r\n  setPackagesToBuy: (packageToBuy: number | undefined) => void\r\n  packagesToBuy: number | undefined\r\n  setPriceSum: (priceSum: number | undefined) => void\r\n}\r\n\r\nconst initialPackageType: PackageType = 5\r\n\r\nexport const ShoppingListForm: React.FC<Props> = ({\r\n  result,\r\n  setPackagesToBuy,\r\n  packagesToBuy,\r\n  setPriceSum,\r\n}) => {\r\n  const [packageType, setPackageType] = useState<PackageType>(\r\n    initialPackageType,\r\n  )\r\n  const [pricePerPackage, setPricePerPackage] = useState<string>('')\r\n\r\n  console.log('type', packageType)\r\n\r\n  useEffect(() => {\r\n    if (!packageType) return setPackagesToBuy(undefined)\r\n    const ceiled = Math.ceil(result / packageType)\r\n    setPackagesToBuy(ceiled)\r\n  }, [result, packageType])\r\n\r\n  useEffect(() => {\r\n    const parsedPrice = parseFloat(pricePerPackage)\r\n    if (!packagesToBuy || !_.isNumber(parsedPrice) || _.isNaN(parsedPrice))\r\n      return setPriceSum(undefined)\r\n    setPriceSum(packagesToBuy * parsedPrice)\r\n  }, [packagesToBuy, pricePerPackage])\r\n\r\n  return (\r\n    <section className=\"my-6 flex flex-col gap-6\">\r\n      <div>\r\n        <h6 className=\"input-label\">Opakowanie:</h6>\r\n        <div className=\"flex flex-col gap-1 mt-1\">\r\n          {getPackagingOptions(packageType, setPackageType)}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"input-label\">Cena za opakowanie:</label>\r\n        <input\r\n          className=\"mt-1 block w-full input\"\r\n          type=\"text\"\r\n          value={pricePerPackage}\r\n          onChange={(e) => setPricePerPackage(e.target.value)}\r\n        />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst getPackagingOptions = (\r\n  selectedPackageType: PackageType,\r\n  onChange: (packageType: PackageType) => void,\r\n) =>\r\n  packageTypes.map((packageType) => (\r\n    <div className=\"flex flex-row gap-4 items-center\" key={`${packageType}kg`}>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"packaging\"\r\n        value={packageType}\r\n        checked={selectedPackageType === packageType}\r\n        onChange={(e) => onChange(parseInt(e.target.value) as PackageType)}\r\n      />\r\n      <label htmlFor={`${packageType}kg`}>{`${packageType} kg`}</label>\r\n    </div>\r\n  ))\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n  packagesToBuy: number\r\n  priceSum: number\r\n}\r\n\r\nexport const ShoppingListResult: React.FC<Props> = ({\r\n  packagesToBuy,\r\n  priceSum,\r\n}) => {\r\n  return (\r\n    <section className=\"w-full flex flex-row\">\r\n      <aside className=\"w-2/5 relative -left-4\">\r\n        <img src=\"/smig_thinking.png\" alt=\"rezultat_img\" />\r\n      </aside>\r\n      <div className=\"w-3/5\">\r\n        <h5 className=\"text-gray-700 text-lg font-bold\">Lista zakupów:</h5>\r\n        <h6 className=\" font-roboto-slab text-gray-400 font-medium text-sm\">\r\n          Opakowań do kupienia:\r\n        </h6>\r\n        <h2 className=\"font-roboto-slab font-bold text-gray-900 text-4xl mt-2\">\r\n          {packagesToBuy}\r\n        </h2>\r\n        <h6 className=\" font-roboto-slab text-gray-400 font-medium text-sm\">\r\n          Całkowity koszt:\r\n        </h6>\r\n        <h2 className=\"font-roboto-slab font-bold text-gray-900 text-4xl mt-2\">\r\n          {priceSum.toLocaleString('pl-PL', {\r\n            style: 'currency',\r\n            currency: 'PLN',\r\n          })}\r\n        </h2>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { RequiredAmountForm } from './RequiredAmountForm'\r\nimport { RequiredAmountResult } from './RequiredAmountResult'\r\nimport { ShoppingListForm } from './ShoppingListForm'\r\nimport { ShoppingListResult } from './ShoppingListResult'\r\n\r\ninterface Props {}\r\n\r\nexport const Finishes: React.FC<Props> = () => {\r\n  const [result, setResult] = useState<number>()\r\n  const [packagesToBuy, setPackagesToBuy] = useState<number>()\r\n  const [priceSum, setPriceSum] = useState<number>()\r\n\r\n  console.log('ptb', packagesToBuy)\r\n  console.log('ps', priceSum)\r\n  return (\r\n    <div className=\"container mx-auto max-w-lg\">\r\n      <div className=\"px-8 py-6\">\r\n        <h5 className=\"font-semibold text-gray-400 text-sm\">\r\n          1. Zużycie gładzi\r\n        </h5>\r\n        <RequiredAmountForm setResult={setResult} />\r\n        {result && <RequiredAmountResult result={result} />}\r\n      </div>\r\n      {result && (\r\n        <div className=\"px-8 py-6\">\r\n          <h5 className=\"font-semibold text-gray-400 text-sm\">2. Zakupy</h5>\r\n          <ShoppingListForm\r\n            result={result}\r\n            setPackagesToBuy={setPackagesToBuy}\r\n            packagesToBuy={packagesToBuy}\r\n            setPriceSum={setPriceSum}\r\n          />\r\n          {packagesToBuy && priceSum && (\r\n            <ShoppingListResult\r\n              packagesToBuy={packagesToBuy}\r\n              priceSum={priceSum}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { Adhesives } from 'components/Adhesives'\nimport { Finishes } from 'components/Finishes'\n\nconst App = () => {\n  return (\n    <div className=\"font-roboto\">\n      <Router>\n        <Routes>\n          <Route path=\"/gladzie\" element={<Finishes />} />\n          <Route path=\"/kleje\" element={<Adhesives />} />\n        </Routes>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}